#!/usr/bin/env python
# coding: utf-8

# # 2.  Τιμές, τύποι και μεταβλητές. Συμβολοσειρές

# ## Σταθερές (Constants)
# 
# H Python δεν διαθέτει προκαθορισμένες *σταθερές* όπως άλλες γλώσσες προγραμματισμού.
# Όμως κατά σύμβαση και όχι κατά κανόνα έχει συμφωνηθεί οι *σταθερές* να ονοματίζονται με κεφαλαίους χαρακτήρες.
# Η αδυναμία της Python στην περίπτωση της δήλωσης *σταθερών* είναι ότι επιτρέπεται η αλλαγή των τιμών τους
# Παρακάτω παρατίθεται ένα παράδειγμα δήλωσης *σταθερών*.

# In[1]:


RATIO_FEET_TO_METERS = 3.281
RATIO_LB_TO_KG = 2.205
PI = 3.14


# ## Κυριολεκτικές σταθερές (literal constants)
# 
# Η κυριολεκτική *σταθερά* ή τιμή είναι ένας αριθμός, ή χαρακτήρας ή μιά συμβολοσειρά. Για παράδειγμα τα παρακάτω
# αποτελούν τιμές: *3.25* (στην python η υποδιαστολή ορίζεται με . και όχι ,), *"ένα τυχαίο κείμενο"*,  *5.25e-1*.
# Αυτές οι τιμές δεν μεταβάλλονται κατά τη διάρκεια εκτέλεσης του προγράμματος γι' αυτό και λέγονται σταθερές. Μπορούν να εκχωρηθούν σε μεταβλητές
# και να χρησιμοποιηθούν σαν τελεστέοι σε λογικές εκφράσεις ή σαν παραμέτροι σε συναρτήσεις. 
# 

# ## Τύποι δεδομένων
# 
# Οι τιμές ανήκουν σε τρεις τύπους δεδομένων (data types) ή κλάσσεις (class):
# - τους ακέραιους αριθμούς (integer) π.χ. το 15 
# - τους αριθμούς κινητής υποδιαστολής (floating point) π.χ. το 201.25)
# - τις συμβολοσειρές (string) π.χ. το "Time is money"

# Με την εντολή `type` ο διερμηνευτής μας απαντάει με τον τύπο της τιμής, όπως παρακάτω:

# In[2]:


type("No news, good news.")


# Η Python είναι *Dynamic typing* δηλαδή δεν ο τύπος των μεταβλητών δεν προκαθορίζεται κατά την συγγραφή αλλά κατά την εκτέλεση.

# ## Κανόνες ονοματοδοσίας μεταβλητών
# 
# Τα ονόματα των μεταβλητών στην Python υπακούουν στους παρακάτω κανόνες:
# - Το όνομα μίας μεταβλητής μπορεί να ξεκινά από ένα γράμμα ή από κάτω πάυλα.
# - Το όνομα μίας μεταβλητής δεν μπορεί με αριθμό.
# - Το όνομα μίας μεταβλητής μπορεί να περιέχει μόνο αλφαριθμητικούς χαρακτήρες.
# - Στα ονόματα των μεταβλήτών γίνεται διάκριση ανάμεσα σε πεζά και κεφαλαία (case sensitive).
# - Οι δεσμευμένες λέξεις της Python (keywords) δεν μπορούν να χρησιμοποιηθούν σε ονόματα μεταβλητών.

# ## Συμβολοσειρές (Strings) 
# Μια συμβολοσειρά είναι μια ακολουθία από χαρακτήρες όπως το `"Το πεπρωμένον φυγείν αδύνατον."`.
# Μπορεί να είναι σε κάθε γλώσσα που υποστηρίζεται από το πρώτυπου Unicode. Οι συμβολοσειρές περικλείονται σε μονά, διπλά ή τριπλά εισαγωγικά. 
# Με τριπλά εισαγωγικά μπορούν να ενσωματωθούν με ευκολία συμβολοσειρές σε πολλές γραμμές και πολλαπλά εισαγωγικά εντός αυτόν.
# Ακολουθούν παραδείγματα συμβολοσειρά.
"My name is Bond, James Bond."

'There is no smoke without fire'



'''
No bees no honey, no work no money.
A little is better than none
What’s done cannot be undone
'''
# ## Χαρακτήρες διαφυγής,κενά, νέες γραμμές

# Μπορούμε να σπάσουμε μια συμβολοσειρά κατά την συγγραφή σε νέα γραμμή με τον χαρακτήρα `\` και κατά την εκτέλεση με τον χαρακτήρα `\n` π.χ.

# In[3]:


message = 'There is no smoke without fire'

print(message)


# In[4]:


message = 'There is no smoke \nwithout fire'

print(message)


# Ή να ορίσουμε κενά με το `\t`

# In[5]:


message = 'There is no smoke \twithout fire'
print(message)


# Ο χαρακτήρας `\` είναι χαρακτήρας διαφυγής που απενεργοποιεί την ειδική λειτουργία των παραπάνω ή την παράθεση εισαγωγικών μεσα σε εισαγωγικά.

# In[6]:


print('There is no smoke \\n without fire')


# In[7]:


print('Where there\'s a will, there\'s a way')


# ## Ανεπεξέργαστες συμβολοσειρές (Raw Strings)
# Παρόμοιο αποτέλεσμα με τα παραπάνω πετυχαίνουμε τις ανεπεξέργαστες συμβολοσειρές οι οποίες ορίζονται με ένα r σαν πρόθεμα

# In[8]:


print(r"It was made by \n συνέχεια")


# ## Αφαίρεση κενών
# Σε αρκετές περιπτώσεις οι συμβολοσειρές περιέχουν κενά είτε στην αρχή είτε στο τέλος.
# Για παράδειγμα οι παρακάτω συμβολοσειρές δεν είναι το ίδιες για την Python. Και επιβεβαιώνεται σε μέσω ελέγχου ισότητας.

# In[9]:


departmentA='ΤΜΧΠΑ'
departmentB = ' ΤΜΧΠΑ '
print(departmentA == departmentB) #not equal


# Για την αφαίρεση των κένων αριστερά, δεξιά ή ταυτόχρονα και στις δύο πλευρές της συμβολοσειρας χρησιμοποιούμε την μέθοδο `strip` και τις παραλλαγές της `rstrip` και `lstrip` 

# In[10]:


print(departmentB.rstrip())
print(departmentB.lstrip())
print(departmentB.strip())


# ## Συνένωση (Concatenation) συμβολοσειρών
# 
# Η απλή παράθεση συμβολοσειρών οδηγεί στην συνενωσή τους δηλ.

# In[11]:


message = "Curiosity " "killed " 'the ' '''cat'''
print(message)


# ## Συνένωση συμβολοσειρών και μεταβλητών
# 
# Η συνένωση μεταβλητών και συμβολοσειρών γίνεται με τον τελεστη `+`.

# In[12]:



city='Βόλος'
perifereia='Θεσσαλία'

print('O '+city+' είναι πόλη της Ελλάδα στην ' +perifereia)


# ## Η μέθοδος format
# Άλλη μια πιο πρακτική μέθοδος κατά την συννένωση μεταβλητών και συμβολοσειρών είναι η μέθοδος format.
# 

# In[13]:


print('O {0} έχει υψόμετρο {1} μέτρα'.format("Όλυμπος", 2918))
print('O {} έχει υψόμετρο {} μέτρα'.format("Όλυμπος", 2918))
print('O {name} έχει υψόμετρο {height} μέτρα'.format(name="Σμόλικας", height= 2637 ))


# ## Δεσμευμένες λέξεις (reserved words)
# Ορισμένες λέξεις έχουν ιδιαίτερη σημασία για την python και δεν μπορούν να χρησιμοποιηθούν σαν ονόματα μεταβλητών. Τα παρακάτω κομμάτια κώδικα θα εκδηλώσουν σφάλμα μεταγλώττισης.
class="Πρώτο εξάμηνο"break='Πότε θα κάνουμε διάλειμμα;'
# Πρόκειται για 33 λέξεις στην τρέχουσα έκδοση της Python.
# Μπορούμε να δούμε ποιές είναι αυτές οι δεσμεύνες λέξεις με την παρακάτω εντολή:

# In[14]:


help("keywords") 


# ## Η εντολή help

# Γενικά με την εντολή `help` καλούμε για βοήθεια και πληροφορίες την Python:

# In[15]:


help(print)


# In[16]:


help(abs)


# In[17]:


help(max)


# ## Αλλαγή Πεζών Κεφαλαίων (Convert case)
# Μπορούμε να κάνουμε αλλαγή ανάμεσα σε κεφαλαία και πεζά με τις παρακάτω μεθόδους συμβολοσειρών:`upper()`, `title()`, `lower()`.
# Αξίζει να σημειώσουμε ότι οι μέθοδοι αυτές δεν έχουν επίδραση στην μεταβλητή που τις καλούμε αλλά πρέπει να επαναεκχωρήσουμε το αποτέλεσμα της μεθόδου στην μεταβλητή με το ίδιο όνομα.

# In[18]:


agios="άγιος νικόλαος"

print(agios.upper())
print(agios) # ο agios παραμένει "άγιος νικόλαος"

print(agios.title())
print('ΑΓΊΑ ΕΛΈΝΗ'.lower())

agios = agios.upper()
print(agios) # ο agios μετά την εκχώρηση στην ίδια μεταβλητή γινεται ΆΓΙΟΣ ΝΙΚΌΛΑΟΣ


# ## Οι συμβολοσειρές είναι μη μεταβαλλόμενη δομή δεδομένων
# Οι συμβολοσειρές αποτελούνται από ακολουθίες χαρακτήρων με σταθερό μέγεθος
# και μη μεταβαλλόμενα περιεχόμενα. Αυτό σημαίνει ότι δεν είναι δυνατόν να προστίθενται ή να αφαιρούνται
# χαρακτήρες, ούτε να τροποποιούνται τα περιεχόμενα του αλφαριθμητικού. 
# Πρόκειται για μια μη μεταβαλλόμενη (immutable) δομή της Python.
# Η αρίθμηση των χαρακτήρων σε ένα αλφαριθμητικό ξεκινάει από το 0. 
# 
# Έτσι στην συμβολοσειρά `country = Ελλάδα` έχουμε:
# 
# `country[0]` → Ε (η αρίθμηση ξεκινά από το 0)
# 
# `country[1]` → λ
# 
# `country[2]` → λ
# 
# `country[3]` → ά
# 
# `country[4]` → δ
# 
# `country[5]` → α
# 
# Η παραπάνω συμβολοσειρά έχει μήκος 6 χαρακτήρες.

# ## Μήκος συμβολοσειράς
# Μέσω της συνάρτησης `len` η Python μας επιστρέφει το μήκος συμβολοσειράς δηλαδή το πλήθος των χαρακτήρων (μαζί με τα κενά) από τους οποιούς αποτελείται.

# In[19]:


message = 'Ή τώρα ή ποτέ.'
len(message)


# ## Η μέθοδος find
# Η μέθοδος `find` μας επιτρέπει να αναζητήσουμε μια συμβολοσειρά μέσα σε μια άλλη συμβολοσειρά. 
# Η μέθοδος μας επιστρέφει την τοποθεσία από την ξεκινάει η αναζητούμενη συμβολοσειρά δηλαδή τον δείκτη (index) στην οποία εντοπίζεται
# ο πρώτος χαρακτηρας της αναζητούμενης συμβολοσειράς μέσα στα περιεχόμενα της αρχικής συμβολοσειράς.
# Στην παρακάτω συμβολοσειρά θα αναζητήσουμε την λέξη `ποτέ`.

# In[20]:


stixos = 'Η Ελλάδα ποτέ δεν πεθαίνει'
index = stixos.find('ποτέ')


# Κανονικά αν πάμε στον χαρακτήρα με ευρετηρίο (index) 9 πρέπει να εντοπίσουμε τον πρώτο χαρακτήρα της συμβολοσειράς που είναι το `π`.
# Πράγματι:

# In[21]:


stixos[index]


# Αν δεν εντοπιστεί η λέξη που αναζητούμε στην συμβολοσειρά η Python θα επιστρέψει: `-1`

# In[22]:


stixos.find('πάντα')


# Η αναζήτηση είναι case sensitive δηλαδή γίνεται διάκριση ανάμεσα σε πεζά και κεφαλαία.

# In[23]:


stixos.find('Ελλάδα') # επιστρέφει τον δείκτη 2 γιατί εντοπίστηκε η λέξη κλειδί


# In[24]:


stixos.find('ΕΛΛΆΔΑ') # επιστρέφει -1 γιατί δεν εντοπίστηκε η λέξη κλειδί


# Μια άλλη σημαντική μέθοδος των συμβολοσειρών είναι η μέθοδος `replace` κατά την οποία μπορούμε να αντικαταστήσουμε τα περιεχόμενα μιας συμβολοσειράς. Στην πρώτη παράμετρο ορίζουμε την συμβολοσειρά που θέλουμε να αντικαταστήσουμε με την δεύτερη παράμετρο.

# In[25]:


stixos.replace('ποτέ', 'πάντα')

